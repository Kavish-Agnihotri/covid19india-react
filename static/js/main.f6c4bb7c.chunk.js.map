{"version":3,"sources":["components/corona.svg","components/icon.svg","utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","components/minigraph.js","components/home.js","components/search.js","components/mapChart.js","components/display.js","components/tracker.js","components/navbar.js","components/links.js","components/cluster.js","components/faq.js","components/banner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","months","formatDate","unformattedDate","day","slice","month","year","time","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","Object","keys","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","forEach","key","handleSort","column","setItem","Fragment","className","reveal","style","display","total","onClick","onMouseEnter","onHighlightState","index","onMouseLeave","touchstart","background","fontWeight","color","delta","active","recovered","deaths","colSpan","isNaN","Date","parse","lastupdatedtime","formatDistance","e","title","window","innerWidth","map","district","toLowerCase","onHighlightDistrict","Unknown","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","reduce","a","length","filter","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","to","districtData","Level","data","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","parseData","deltas","confirmeddelta","recovereddelta","deceaseddelta","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","d","n","properties","maxConfirmed","on","name","err","console","log","handleMouseover","target","parentNode","appendChild","text","value","parseFloat","toFixed","toTitleCase","str","split","i","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","geoDataFile","prevCount","classed","nodes","highlightRegionInMap","id","viewBox","preserveAspectRatio","ref","India","Assam","Bihar","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","regionHighlighted","setSelectedRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","region","getRegionFromState","useMemo","currentMapData","acc","districtWiseData","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","marginTop","padding","borderRadius","marginRight","TimeSeries","timeseries","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","update","setUpdate","graphElement1","graphElement2","graphElement3","graphElement4","graphElement5","graphElement6","u","graphData","svg1","svg2","svg3","svg4","svg5","svg6","margin","dateMin","setDate","getDate","dateMax","x","range","indexScale","svgArray","dataTypes","colors","logCharts","Set","dTypeMaxMap","c","yScales","entries","type","maxY","applyLogMode","has","nice","match","y","dataTypeIdx","dType","max","focus","mouseout","mousemove","xm","this","round","invert","f","j","scaleIdx","ticks","ceil","log10","tickPadding","tickFormat","dots","datum","curve","refreshGraphs","graphs","Minigraph","y1","path1","totalLength1","node","getTotalLength","transition","duration","animate","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","setDeltas","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","getStates","Promise","all","axios","get","response","stateDistrictWiseResponse","statewise","cases_time_series","key_values","formatDateAbsolute","htmlFor","checked","aria-label","onChange","event","disabled","search","Search","leaflet","searchControl","ELG","addTo","results","L","LayerGroup","clearLayers","latlng","addLayer","marker","Component","withLeaflet","Icon","iconUrl","require","iconRetinaUrl","iconAnchor","iconSize","MapChart","Map","center","pLocation","currentLocation","pinLocation","zoom","radius","TileLayer","detectRetina","maxNativeZoom","maxZoom","url","attribution","Circle","fillColor","cases","Popup","autoPan","Marker","position","searchMap","Display","children","URL","reset","Tracker","input","setInputData","setCurrentLocation","error","setError","invalidPin","setInvalidPin","receiveData","setReceiveData","params","latitude","longitude","then","catch","textAlign","fontSize","minDist","preventDefault","navigator","geolocation","getCurrentPosition","coords","getLocationHandler","TextField","placeholder","val","inputHandler","InputProps","endAdornment","InputAdornment","IconButton","pinCode","PIN_validity","lat","lng","searchHandler","Navbar","location","pathname","alt","src","pages","page","pageLink","animationDelayForNavbar","displayName","Links","href","Cluster","referrerPolicy","FAQ","faq","setFaq","getFAQs","question","dangerouslySetInnerHTML","__html","answer","Banner","snippets","setSnippets","snippet","setSnippet","factoids","snippetChooser","min","random","interval","setInterval","clearInterval","banner","history","createBrowserHistory","App","view","render","exact","component","justifyContent","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.f6c4bb7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corona.64ae62e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.ad278ccf.svg\";","const months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {formatDate} from '../utils/common-functions';\r\nimport {formatDistance} from 'date-fns';\r\nfunction Row(props) {\r\n  const [state, setState] = useState(props.state);\r\n  const [districts, setDistricts] = useState(props.districts);\r\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\r\n  const [sortData, setSortData] = useState({\r\n    sortColumn: localStorage.getItem('district.sortColumn')\r\n      ? localStorage.getItem('district.sortColumn')\r\n      : 'confirmed',\r\n    isAscending: localStorage.getItem('district.isAscending')\r\n      ? localStorage.getItem('district.isAscending') === 'true'\r\n      : false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState(props.state);\r\n  }, [props.state]);\r\n\r\n  useEffect(() => {\r\n    setDistricts(props.districts);\r\n    setSortedDistricts(props.districts);\r\n  }, [props.districts]);\r\n\r\n  const handleReveal = () => {\r\n    props.handleReveal(props.state.state);\r\n  };\r\n\r\n  const sortDistricts = useCallback(\r\n    (aDistricts) => {\r\n      const sorted = {};\r\n      if (aDistricts) {\r\n        Object.keys(aDistricts)\r\n          .sort((district1, district2) => {\r\n            const sortColumn = sortData.sortColumn;\r\n            const value1 =\r\n              sortColumn === 'district'\r\n                ? district1\r\n                : parseInt(aDistricts[district1].confirmed);\r\n            const value2 =\r\n              sortColumn === 'district'\r\n                ? district2\r\n                : parseInt(aDistricts[district2].confirmed);\r\n            const comparisonValue =\r\n              value1 > value2\r\n                ? 1\r\n                : value1 === value2 && district1 > district2\r\n                ? 1\r\n                : -1;\r\n            return sortData.isAscending\r\n              ? comparisonValue\r\n              : comparisonValue * -1;\r\n          })\r\n          .forEach((key) => {\r\n            sorted[key] = aDistricts[key];\r\n          });\r\n        setSortedDistricts(sorted);\r\n      }\r\n    },\r\n    [sortData.isAscending, sortData.sortColumn]\r\n  );\r\n\r\n  const handleSort = (column) => {\r\n    const isAscending =\r\n      sortData.sortColumn === column\r\n        ? !sortData.isAscending\r\n        : sortData.sortColumn === 'district';\r\n    setSortData({\r\n      sortColumn: column,\r\n      isAscending: isAscending,\r\n    });\r\n    localStorage.setItem('district.sortColumn', column);\r\n    localStorage.setItem('district.isAscending', isAscending);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sortDistricts(districts);\r\n  }, [districts, sortData, sortDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span\r\n        className={`dropdown ${\r\n          props.reveal ? 'rotateRightDown' : 'rotateDownRight'\r\n        }`}\r\n        style={{display: !props.total ? '' : 'none'}}\r\n        onClick={() => {\r\n          handleReveal();\r\n        }}\r\n      >\r\n        <Icon.ChevronDown />\r\n      </span>\r\n      <tr\r\n        className={props.total ? 'state is-total' : 'state'}\r\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\r\n        onMouseLeave={() => props.onHighlightState?.()}\r\n        touchstart={() => props.onHighlightState?.(state, props.index)}\r\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\r\n        onClick={() => {\r\n          handleReveal();\r\n        }}\r\n      >\r\n        <td style={{fontWeight: 600}}>{state.state}</td>\r\n        <td>\r\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n            {state.delta.confirmed > 0 && <Icon.ArrowUp />}\r\n            {state.delta.confirmed > 0 ? `${state.delta.confirmed}` : ''}\r\n          </span>\r\n          {parseInt(state.confirmed) === 0 ? '-' : state.confirmed}\r\n        </td>\r\n        <td\r\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\r\n        >\r\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\r\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\r\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\r\n          </span>*/}\r\n          {parseInt(state.active) === 0 ? '-' : state.active}\r\n        </td>\r\n        <td\r\n          style={{\r\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\r\n          }}\r\n        >\r\n          {/* <span className=\"deltas\" style={{color: '#28a745'}}>\r\n            {!state.delta.recovered==0 && <Icon.ArrowUp/>}\r\n            {state.delta.recovered > 0 ? `${state.delta.recovered}` : ''}\r\n          </span>*/}\r\n          {parseInt(state.recovered) === 0 ? '-' : state.recovered}\r\n        </td>\r\n        <td\r\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\r\n        >\r\n          {/* <span className=\"deltas\" style={{color: '#6c757d'}}>\r\n            {!state.delta.deaths==0 && <Icon.ArrowUp/>}\r\n            {state.delta.deaths>0 ? `${state.delta.deaths}` : ''}\r\n          </span>*/}\r\n          {parseInt(state.deaths) === 0 ? '-' : state.deaths}\r\n        </td>\r\n      </tr>\r\n\r\n      <tr\r\n        className={'state-last-update'}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td colSpan={2}>\r\n          <div className=\"last-update\">\r\n            <h6>Last Updated&nbsp;</h6>\r\n            <h6>\r\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\r\n                ? ''\r\n                : `${formatDistance(\r\n                    new Date(formatDate(props.state.lastupdatedtime)),\r\n                    new Date()\r\n                  )} Ago`}\r\n            </h6>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n\r\n      <tr\r\n        className={`district-heading`}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td onClick={(e) => handleSort('district')}>\r\n          <div className=\"heading-content\">\r\n            <abbr title=\"District\">District</abbr>\r\n            <div\r\n              style={{\r\n                display:\r\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\r\n              }}\r\n            >\r\n              {sortData.isAscending ? (\r\n                <div className=\"arrow-up\" />\r\n              ) : (\r\n                <div className=\"arrow-down\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td onClick={(e) => handleSort('confirmed')}>\r\n          <div className=\"heading-content\">\r\n            <abbr\r\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\r\n              title=\"Confirmed\"\r\n            >\r\n              {window.innerWidth <= 769\r\n                ? window.innerWidth <= 375\r\n                  ? 'C'\r\n                  : 'Cnfmd'\r\n                : 'Confirmed'}\r\n            </abbr>\r\n            <div\r\n              style={{\r\n                display:\r\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\r\n              }}\r\n            >\r\n              {sortData.isAscending ? (\r\n                <div className=\"arrow-up\" />\r\n              ) : (\r\n                <div className=\"arrow-down\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n\r\n      {sortedDistricts &&\r\n        Object.keys(sortedDistricts).map((district, index) => {\r\n          if (district.toLowerCase() !== 'unknown') {\r\n            return (\r\n              <tr\r\n                key={index}\r\n                className={`district`}\r\n                style={{\r\n                  display: props.reveal && !props.total ? '' : 'none',\r\n                  background: index % 2 === 0 ? '#f8f9fa' : '',\r\n                }}\r\n                onMouseEnter={() =>\r\n                  props.onHighlightDistrict?.(district, state, props.index)\r\n                }\r\n                onMouseLeave={() => props.onHighlightDistrict?.()}\r\n                touchstart={() =>\r\n                  props.onHighlightDistrict?.(district, state, props.index)\r\n                }\r\n              >\r\n                <td style={{fontWeight: 600}}>{district}</td>\r\n                <td>\r\n                  <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n                    {sortedDistricts[district].delta.confirmed > 0 && (\r\n                      <Icon.ArrowUp />\r\n                    )}\r\n                    {sortedDistricts[district].delta.confirmed > 0\r\n                      ? `${sortedDistricts[district].delta.confirmed}`\r\n                      : ''}\r\n                  </span>\r\n\r\n                  {sortedDistricts[district].confirmed}\r\n                </td>\r\n              </tr>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n      {sortedDistricts?.Unknown && (\r\n        <tr\r\n          className={`district`}\r\n          style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n        >\r\n          <td style={{fontWeight: 600}}>Unknown</td>\r\n          <td>\r\n            <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n              {sortedDistricts['Unknown'].delta.confirmed > 0 && (\r\n                <Icon.ArrowUp />\r\n              )}\r\n              {sortedDistricts['Unknown'].delta.confirmed > 0\r\n                ? `${sortedDistricts['Unknown'].delta.confirmed}`\r\n                : ''}\r\n            </span>\r\n            {sortedDistricts['Unknown'].confirmed}\r\n          </td>\r\n        </tr>\r\n      )}\r\n\r\n      <tr\r\n        className={`spacer`}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Row from './row';\r\n\r\nfunction Table(props) {\r\n  const [states, setStates] = useState(props.states);\r\n  const [revealedStates, setRevealedStates] = useState({});\r\n  const [districts, setDistricts] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [sortData, setSortData] = useState({\r\n    sortColumn: localStorage.getItem('state.sortColumn')\r\n      ? localStorage.getItem('state.sortColumn')\r\n      : 'confirmed',\r\n    isAscending: localStorage.getItem('state.isAscending')\r\n      ? localStorage.getItem('state.isAscending') === 'true'\r\n      : false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.summary === true) {\r\n      setStates(props.states.slice(0, 9));\r\n    } else {\r\n      setStates(props.states);\r\n    }\r\n  }, [props.states, props.summary]);\r\n\r\n  useEffect(() => {\r\n    if (props.states[0]) {\r\n      setRevealedStates(\r\n        props.states.reduce((a, state) => {\r\n          return {...a, [state.state]: false};\r\n        }, {})\r\n      );\r\n    }\r\n  }, [props.states]);\r\n\r\n  useEffect(() => {\r\n    if (states.length > 0) {\r\n      // slice to ignore the first item which is the total count\r\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\r\n    }\r\n  }, [states]);\r\n\r\n  useEffect(() => {\r\n    setDistricts(props.stateDistrictWiseData);\r\n  }, [props.stateDistrictWiseData]);\r\n\r\n  const doSort = (e, props) => {\r\n    const totalRow = states.splice(0, 1);\r\n    states.sort((StateData1, StateData2) => {\r\n      const sortColumn = sortData.sortColumn;\r\n      let value1 = StateData1[sortColumn];\r\n      let value2 = StateData2[sortColumn];\r\n\r\n      if (sortColumn !== 'state') {\r\n        value1 = parseInt(StateData1[sortColumn]);\r\n        value2 = parseInt(StateData2[sortColumn]);\r\n      }\r\n\r\n      if (sortData.isAscending) {\r\n        return value1 > value2\r\n          ? 1\r\n          : value1 === value2 && StateData1['state'] > StateData2['state']\r\n          ? 1\r\n          : -1;\r\n      } else {\r\n        return value1 < value2\r\n          ? 1\r\n          : value1 === value2 && StateData1['state'] > StateData2['state']\r\n          ? 1\r\n          : -1;\r\n      }\r\n    });\r\n    states.unshift(totalRow[0]);\r\n  };\r\n\r\n  const handleSort = (e, props) => {\r\n    const currentsortColumn = e.currentTarget\r\n      .querySelector('abbr')\r\n      .getAttribute('title')\r\n      .toLowerCase();\r\n    const isAscending =\r\n      sortData.sortColumn === currentsortColumn\r\n        ? !sortData.isAscending\r\n        : sortData.sortColumn === 'state';\r\n    setSortData({\r\n      sortColumn: currentsortColumn,\r\n      isAscending: isAscending,\r\n    });\r\n    localStorage.setItem('state.sortColumn', currentsortColumn);\r\n    localStorage.setItem('state.isAscending', isAscending);\r\n  };\r\n\r\n  const handleReveal = (state) => {\r\n    setRevealedStates({\r\n      ...revealedStates,\r\n      [state]: !revealedStates[state],\r\n    });\r\n  };\r\n\r\n  doSort();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\r\n        Compiled from State Govt. numbers <Link to=\"/faq\">Know More</Link>\r\n      </h5>\r\n      <table className=\"table fadeInUp\" style={{animationDelay: '1s'}}>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              className=\"sticky state-heading\"\r\n              onClick={(e) => handleSort(e, props)}\r\n            >\r\n              <div className=\"heading-content\">\r\n                <abbr title=\"State\">State/UT</abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\r\n                  title=\"Confirmed\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'C'\r\n                      : 'Cnfmd'\r\n                    : 'Confirmed'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\r\n                  title=\"Active\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'A'\r\n                      : 'Actv'\r\n                    : 'Active'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\r\n                  title=\"Recovered\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'R'\r\n                      : 'Rcvrd'\r\n                    : 'Recovered'}\r\n                </abbr>\r\n                <div\r\n                  className={\r\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\r\n                  }\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\r\n                  title=\"Deaths\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'D'\r\n                      : 'Dcsd'\r\n                    : 'Deceased'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {states.map((state, index) => {\r\n            if (index !== 0 && state.confirmed > 0) {\r\n              return (\r\n                <Row\r\n                  key={index}\r\n                  index={index}\r\n                  state={state}\r\n                  total={false}\r\n                  reveal={revealedStates[state.state]}\r\n                  districts={\r\n                    Object.keys(districts).length - 1 > 0\r\n                      ? districts[state.state].districtData\r\n                      : []\r\n                  }\r\n                  onHighlightState={props.onHighlightState}\r\n                  onHighlightDistrict={props.onHighlightDistrict}\r\n                  handleReveal={handleReveal}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </tbody>\r\n\r\n        <tbody>\r\n          {states.length > 1 && props.summary === false && (\r\n            <Row key={0} state={states[0]} total={true} />\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\r\n        {count} States/UTS Affected\r\n      </h5>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nfunction Level(props) {\r\n  const [data, setData] = useState(props.data);\r\n  const [confirmed, setConfirmed] = useState(0);\r\n  const [active, setActive] = useState(0);\r\n  const [recoveries, setRecoveries] = useState(0);\r\n  const [deaths, setDeaths] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(props.data);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    const parseData = () => {\r\n      let confirmed = 0;\r\n      let active = 0;\r\n      let recoveries = 0;\r\n      let deaths = 0;\r\n      data.forEach((state, index) => {\r\n        if (index !== 0) {\r\n          confirmed += parseInt(state.confirmed);\r\n          active += parseInt(state.active);\r\n          recoveries += parseInt(state.recovered);\r\n          deaths += parseInt(state.deaths);\r\n        }\r\n      });\r\n      setConfirmed(confirmed);\r\n      setActive(active);\r\n      setRecoveries(recoveries);\r\n      setDeaths(deaths);\r\n    };\r\n    parseData();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"Level fadeInUp\" style={{animationDelay: '0.8s'}}>\r\n      <div className=\"level-item is-cherry\">\r\n        <h5>Confirmed</h5>\r\n        <h4>\r\n          [\r\n          {props.deltas\r\n            ? props.deltas.confirmeddelta >= 0\r\n              ? '+' + props.deltas.confirmeddelta\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1>{confirmed} </h1>\r\n      </div>\r\n\r\n      <div className=\"level-item is-blue\">\r\n        <h5 className=\"heading\">Active</h5>\r\n        <h4>&nbsp;</h4>\r\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\r\n        <h1 className=\"title has-text-info\">{active}</h1>\r\n      </div>\r\n\r\n      <div className=\"level-item is-green\">\r\n        <h5 className=\"heading\">Recovered</h5>\r\n        <h4>\r\n          [\r\n          {props.deltas\r\n            ? props.deltas.recovereddelta >= 0\r\n              ? '+' + props.deltas.recovereddelta\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-success\">{recoveries} </h1>\r\n      </div>\r\n\r\n      <div className=\"level-item is-gray\">\r\n        <h5 className=\"heading\">Deceased</h5>\r\n        <h4>\r\n          [\r\n          {props.deltas\r\n            ? props.deltas.deceaseddelta >= 0\r\n              ? '+' + props.deltas.deceaseddelta\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-grey\">{deaths}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Level;\r\n","export const MAP_TYPES = {\r\n  COUNTRY: 'country',\r\n  STATE: 'state',\r\n};\r\n\r\nexport const MAPS_DIR = '/maps';\r\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport * as d3 from 'd3';\r\nimport {legendColor} from 'd3-svg-legend';\r\nimport * as topojson from 'topojson';\r\nimport {MAP_TYPES} from '../constants';\r\n\r\nconst propertyFieldMap = {\r\n  country: 'st_nm',\r\n  state: 'district',\r\n};\r\n\r\nfunction ChoroplethMap({\r\n  statistic,\r\n  mapData,\r\n  setHoveredRegion,\r\n  mapMeta,\r\n  changeMap,\r\n  selectedRegion,\r\n}) {\r\n  const choroplethMap = useRef(null);\r\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\r\n\r\n  const ready = useCallback(\r\n    (geoData) => {\r\n      d3.selectAll('svg#chart > *').remove();\r\n      const propertyField = propertyFieldMap[mapMeta.mapType];\r\n      const maxInterpolation = 0.8;\r\n      const svg = d3.select(choroplethMap.current);\r\n      const width = +svg.attr('width');\r\n      const height = +svg.attr('height');\r\n\r\n      const handleMouseover = (name) => {\r\n        try {\r\n          setHoveredRegion(name, mapMeta);\r\n        } catch (err) {\r\n          console.log('err', err);\r\n        }\r\n      };\r\n\r\n      const topology = topojson.feature(\r\n        geoData,\r\n        geoData.objects[mapMeta.graphObjectName]\r\n      );\r\n\r\n      const projection = d3.geoMercator();\r\n\r\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\r\n        projection.fitSize([width, height], topology);\r\n      else\r\n        projection.fitExtent(\r\n          [\r\n            [90, 20],\r\n            [width, height],\r\n          ],\r\n          topology\r\n        );\r\n\r\n      const path = d3.geoPath(projection);\r\n\r\n      let onceTouchedRegion = null;\r\n\r\n      svg\r\n        .append('g')\r\n        .attr('class', 'states')\r\n        .selectAll('path')\r\n        .data(topology.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('class', 'path-region')\r\n        .attr('fill', function (d) {\r\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\r\n          const color =\r\n            n === 0\r\n              ? '#ffffff'\r\n              : d3.interpolateReds(\r\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\r\n                );\r\n          return color;\r\n        })\r\n        .attr('d', path)\r\n        .attr('pointer-events', 'all')\r\n        .on('mouseover', (d) => {\r\n          handleMouseover(d.properties[propertyField]);\r\n          const target = d3.event.target;\r\n          d3.select(target.parentNode.appendChild(target)).attr(\r\n            'class',\r\n            'map-hover'\r\n          );\r\n        })\r\n        .on('mouseleave', (d) => {\r\n          const target = d3.event.target;\r\n          d3.select(target).attr('class', 'path-region map-default');\r\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n        })\r\n        .on('touchstart', (d) => {\r\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n          else onceTouchedRegion = d;\r\n        })\r\n        .on('click', (d) => {\r\n          if (onceTouchedRegion) {\r\n            return;\r\n          }\r\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\r\n            return;\r\n          }\r\n          changeMap(d.properties[propertyField], mapMeta.mapType);\r\n        })\r\n        .style('cursor', 'pointer')\r\n        .append('title')\r\n        .text(function (d) {\r\n          const value = mapData[d.properties[propertyField]] || 0;\r\n          return (\r\n            parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2) +\r\n            '% from ' +\r\n            toTitleCase(d.properties[propertyField])\r\n          );\r\n        });\r\n\r\n      svg\r\n        .append('path')\r\n        .attr('stroke', '#ff073a20')\r\n        .attr('fill', 'none')\r\n        .attr('stroke-width', 2)\r\n        .attr(\r\n          'd',\r\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\r\n        );\r\n    },\r\n    [\r\n      mapData,\r\n      mapMeta,\r\n      statistic.total,\r\n      statistic.maxConfirmed,\r\n      changeMap,\r\n      setHoveredRegion,\r\n    ]\r\n  );\r\n\r\n  const toTitleCase = (str) => {\r\n    str = str.toLowerCase().split(' ');\r\n    for (let i = 0; i < str.length; i++) {\r\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\r\n    }\r\n    return str.join(' ');\r\n  };\r\n\r\n  const renderData = useCallback(() => {\r\n    const svg = d3.select(choroplethMap.current);\r\n\r\n    // Colorbar\r\n    const maxInterpolation = 0.8;\r\n    const color = d3\r\n      .scaleSequential(d3.interpolateReds)\r\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\r\n\r\n    let cells = null;\r\n    let label = null;\r\n\r\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\r\n      if (i === genLength - 1) {\r\n        const n = Math.floor(generatedLabels[i]);\r\n        return `${n}+`;\r\n      } else {\r\n        const n1 = 1 + Math.floor(generatedLabels[i]);\r\n        const n2 = Math.floor(generatedLabels[i + 1]);\r\n        return `${n1} - ${n2}`;\r\n      }\r\n    };\r\n\r\n    const numCells = 6;\r\n    const delta = Math.floor(\r\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\r\n        (numCells - 1)\r\n    );\r\n\r\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\r\n\r\n    svg\r\n      .append('g')\r\n      .attr('class', 'legendLinear')\r\n      .attr('transform', 'translate(1, 335)');\r\n\r\n    const legendLinear = legendColor()\r\n      .shapeWidth(36)\r\n      .shapeHeight(10)\r\n      .cells(cells)\r\n      .titleWidth(3)\r\n      .labels(label)\r\n      .title('Confirmed Cases')\r\n      .orient('vertical')\r\n      .scale(color);\r\n\r\n    svg\r\n      .select('.legendLinear')\r\n      .call(legendLinear)\r\n      .selectAll('text')\r\n      .style('font-size', '10px');\r\n  }, [statistic.maxConfirmed]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await d3.json(mapMeta.geoDataFile);\r\n      if (statistic && choroplethMap.current) {\r\n        ready(data);\r\n        renderData();\r\n        setSvgRenderCount((prevCount) => prevCount + 1);\r\n      }\r\n    })();\r\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\r\n\r\n  const highlightRegionInMap = (name, mapType) => {\r\n    const propertyField = propertyFieldMap[mapType];\r\n    const paths = d3.selectAll('.path-region');\r\n    paths.classed('map-hover', (d, i, nodes) => {\r\n      if (name === d.properties[propertyField]) {\r\n        nodes[i].parentNode.appendChild(nodes[i]);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    highlightRegionInMap(selectedRegion, mapMeta.mapType);\r\n  }, [mapMeta.mapType, svgRenderCount, selectedRegion]);\r\n\r\n  return (\r\n    <div className=\"svg-parent\">\r\n      <svg\r\n        id=\"chart\"\r\n        width=\"480\"\r\n        height=\"450\"\r\n        viewBox=\"0 0 480 450\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n        ref={choroplethMap}\r\n      ></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChoroplethMap;\r\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport ChoroplethMap from './choropleth';\r\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\r\nimport {formatDate} from '../utils/common-functions';\r\nimport {formatDistance} from 'date-fns';\r\n\r\nconst mapMeta = {\r\n  India: {\r\n    name: 'India',\r\n    geoDataFile: `${MAPS_DIR}/india.json`,\r\n    mapType: MAP_TYPES.COUNTRY,\r\n    graphObjectName: 'india',\r\n  },\r\n  'Andaman and Nicobar Islands': {\r\n    name: 'Andaman and Nicobar Islands',\r\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'andamannicobarislands_district',\r\n  },\r\n  'Arunachal Pradesh': {\r\n    name: 'Arunachal Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'arunachalpradesh_district',\r\n  },\r\n  'Andhra Pradesh': {\r\n    name: 'Andhra Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'andhrapradesh_district',\r\n  },\r\n\r\n  Assam: {\r\n    name: 'Assam',\r\n    geoDataFile: `${MAPS_DIR}/assam.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'assam_district',\r\n  },\r\n  Bihar: {\r\n    name: 'Bihar',\r\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'bihar_district',\r\n  },\r\n  Chhattisgarh: {\r\n    name: 'Chhattisgarh',\r\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'chhattisgarh_district',\r\n  },\r\n  Delhi: {\r\n    name: 'Delhi',\r\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'delhi_district',\r\n  },\r\n  Karnataka: {\r\n    name: 'Karnataka',\r\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'karnataka_district',\r\n  },\r\n  Kerala: {\r\n    name: 'Kerala',\r\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'kerala_district',\r\n  },\r\n  Goa: {\r\n    name: 'Goa',\r\n    geoDataFile: `${MAPS_DIR}/goa.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'goa_district',\r\n  },\r\n  Gujarat: {\r\n    name: 'Gujarat',\r\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'gujarat_district',\r\n  },\r\n  Haryana: {\r\n    name: 'Haryana',\r\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'haryana_district',\r\n  },\r\n  'Himachal Pradesh': {\r\n    name: 'Himachal Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'himachalpradesh_district',\r\n  },\r\n  'Jammu and Kashmir': {\r\n    name: 'Jammu and Kashmir',\r\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'jammukashmir_district',\r\n  },\r\n  Jharkhand: {\r\n    name: 'Jharkhand',\r\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'jharkhand_district',\r\n  },\r\n  Ladakh: {\r\n    name: 'Ladakh',\r\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'ladakh_district',\r\n  },\r\n  'Madhya Pradesh': {\r\n    name: 'Madhya Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'madhyapradesh_district',\r\n  },\r\n  Maharashtra: {\r\n    name: 'Maharashtra',\r\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'maharashtra_district',\r\n  },\r\n  Manipur: {\r\n    name: 'Manipur',\r\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'manipur_district',\r\n  },\r\n  Meghalaya: {\r\n    name: 'Meghalaya',\r\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'meghalaya_district',\r\n  },\r\n  Mizoram: {\r\n    name: 'Mizoram',\r\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'mizoram_district',\r\n  },\r\n  Nagaland: {\r\n    name: 'Nagaland',\r\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'nagaland_district',\r\n  },\r\n  Odisha: {\r\n    name: 'Odisha',\r\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'odisha_district',\r\n  },\r\n  Punjab: {\r\n    name: 'Punjab',\r\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'punjab_district',\r\n  },\r\n  Rajasthan: {\r\n    name: 'Rajasthan',\r\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'rajasthan_district',\r\n  },\r\n  Sikkim: {\r\n    name: 'Sikkim',\r\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'sikkim_district',\r\n  },\r\n  'Tamil Nadu': {\r\n    name: 'Tamil Nadu',\r\n    geoDataFile: `${MAPS_DIR}/tamil-nadu.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'tamilnadu_district',\r\n  },\r\n  Telangana: {\r\n    name: 'Telangana',\r\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'telangana_district',\r\n  },\r\n  Tripura: {\r\n    name: 'Tripura',\r\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'tripura_district',\r\n  },\r\n  Uttarakhand: {\r\n    name: 'Uttarakhand',\r\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'uttarakhand_district',\r\n  },\r\n  'Uttar Pradesh': {\r\n    name: 'Uttar Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'uttarpradesh_district',\r\n  },\r\n\r\n  'West Bengal': {\r\n    name: 'West Bengal',\r\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'westbengal_district',\r\n  },\r\n};\r\n\r\nexport default function ({states, stateDistrictWiseData, regionHighlighted}) {\r\n  const [selectedRegion, setSelectedRegion] = useState({});\r\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState({});\r\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\r\n\r\n  useEffect(() => {\r\n    const region = getRegionFromState(states[1]);\r\n    setCurrentHoveredRegion(region);\r\n  }, [states]);\r\n\r\n  if (!currentHoveredRegion) {\r\n    return null;\r\n  }\r\n\r\n  const [statistic, currentMapData] = useMemo(() => {\r\n    const statistic = {total: 0, maxConfirmed: 0};\r\n    let currentMapData = {};\r\n\r\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\r\n      currentMapData = states.reduce((acc, state) => {\r\n        if (state.state === 'Total') {\r\n          return acc;\r\n        }\r\n        const confirmed = parseInt(state.confirmed);\r\n        statistic.total += confirmed;\r\n        if (confirmed > statistic.maxConfirmed) {\r\n          statistic.maxConfirmed = confirmed;\r\n        }\r\n\r\n        acc[state.state] = state.confirmed;\r\n        return acc;\r\n      }, {});\r\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\r\n      const districtWiseData = (\r\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\r\n      ).districtData;\r\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\r\n        const confirmed = parseInt(districtWiseData[district].confirmed);\r\n        statistic.total += confirmed;\r\n        if (confirmed > statistic.maxConfirmed) {\r\n          statistic.maxConfirmed = confirmed;\r\n        }\r\n        acc[district] = districtWiseData[district].confirmed;\r\n        return acc;\r\n      }, {});\r\n    }\r\n    return [statistic, currentMapData];\r\n  }, [currentMap, states, stateDistrictWiseData]);\r\n\r\n  const setHoveredRegion = useCallback(\r\n    (name, currentMap) => {\r\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\r\n        setCurrentHoveredRegion(\r\n          getRegionFromState(states.filter((state) => name === state.state)[0])\r\n        );\r\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\r\n        const state = stateDistrictWiseData[currentMap.name] || {\r\n          districtData: {},\r\n        };\r\n        let districtData = state.districtData[name];\r\n        if (!districtData) {\r\n          districtData = {\r\n            confirmed: 0,\r\n            active: 0,\r\n            deaths: 0,\r\n            recovered: 0,\r\n          };\r\n        }\r\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\r\n      }\r\n    },\r\n    [stateDistrictWiseData, states]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (regionHighlighted === undefined) {\r\n      return;\r\n    } else if (regionHighlighted === null) {\r\n      setSelectedRegion(null);\r\n      return;\r\n    }\r\n    const isState = !('district' in regionHighlighted);\r\n    if (isState) {\r\n      const newMap = mapMeta['India'];\r\n      setCurrentMap(newMap);\r\n      const region = getRegionFromState(regionHighlighted.state);\r\n      setCurrentHoveredRegion(region);\r\n      setSelectedRegion(region.name);\r\n    } else {\r\n      const newMap = mapMeta[regionHighlighted.state.state];\r\n      if (!newMap) {\r\n        return;\r\n      }\r\n      setCurrentMap(newMap);\r\n      setHoveredRegion(regionHighlighted.district, newMap);\r\n      setSelectedRegion(regionHighlighted.district);\r\n    }\r\n  }, [regionHighlighted, currentMap.mapType, setHoveredRegion]);\r\n\r\n  const getRegionFromDistrict = (districtData, name) => {\r\n    if (!districtData) {\r\n      return;\r\n    }\r\n    const region = {...districtData};\r\n    if (!region.name) {\r\n      region.name = name;\r\n    }\r\n    return region;\r\n  };\r\n\r\n  const getRegionFromState = (state) => {\r\n    if (!state) {\r\n      return;\r\n    }\r\n    const region = {...state};\r\n    if (!region.name) {\r\n      region.name = region.state;\r\n    }\r\n    return region;\r\n  };\r\n\r\n  const switchMapToState = useCallback(\r\n    (name) => {\r\n      const newMap = mapMeta[name];\r\n      if (!newMap) {\r\n        return;\r\n      }\r\n      setCurrentMap(newMap);\r\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\r\n        setHoveredRegion(states[1].state, newMap);\r\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\r\n        const districtData = (stateDistrictWiseData[name] || {districtData: {}})\r\n          .districtData;\r\n        const topDistrict = Object.keys(districtData)\r\n          .filter((name) => name !== 'Unknown')\r\n          .sort((a, b) => {\r\n            return districtData[b].confirmed - districtData[a].confirmed;\r\n          })[0];\r\n        setHoveredRegion(topDistrict, newMap);\r\n      }\r\n    },\r\n    [setHoveredRegion, stateDistrictWiseData, states]\r\n  );\r\n  const {name, lastupdatedtime} = currentHoveredRegion;\r\n\r\n  return (\r\n    <div className=\"MapExplorer fadeInUp\" style={{animationDelay: '1.2s'}}>\r\n      <div className=\"header\">\r\n        <h1>{currentMap.name} Map</h1>\r\n        <h6>\r\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\r\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state' : 'district'} for\r\n          more details\r\n        </h6>\r\n        {window.innerWidth <= 769 && (\r\n          <h6 style={{marginTop: '1rem'}}>\r\n            <span\r\n              style={{\r\n                fontWeight: 900,\r\n                color: '#fff',\r\n                background: '#000',\r\n                padding: '0.25rem',\r\n                borderRadius: '2.5px',\r\n                marginRight: '0.25rem',\r\n              }}\r\n            >\r\n              Update!\r\n            </span>{' '}\r\n            Tap twice on states to view districts!\r\n          </h6>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"map-stats\">\r\n        <div className=\"stats\">\r\n          <h5>Confirmed</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{currentHoveredRegion.confirmed}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats is-blue\">\r\n          <h5>Active</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{currentHoveredRegion.active || ''}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats is-green\">\r\n          <h5>Recovered</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{currentHoveredRegion.recovered || ''}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats is-gray\">\r\n          <h5>Deceased</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{currentHoveredRegion.deaths || ''}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"meta\">\r\n        <h2>{name}</h2>\r\n        {lastupdatedtime && (\r\n          <div\r\n            className={`last-update ${\r\n              currentMap.mapType === MAP_TYPES.STATE\r\n                ? 'district-last-update'\r\n                : 'state-last-update'\r\n            }`}\r\n          >\r\n            <h6>Last Updated</h6>\r\n            <h3>\r\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\r\n                ? ''\r\n                : formatDistance(\r\n                    new Date(formatDate(lastupdatedtime)),\r\n                    new Date()\r\n                  ) + ' Ago'}\r\n            </h3>\r\n          </div>\r\n        )}\r\n\r\n        {currentMap.mapType === MAP_TYPES.STATE &&\r\n        currentMapData.Unknown > 0 ? (\r\n          <h4 className=\"unknown\">\r\n            Districts unknown for {currentMapData.Unknown} people\r\n          </h4>\r\n        ) : null}\r\n\r\n        {currentMap.mapType === MAP_TYPES.STATE ? (\r\n          <div\r\n            className=\"button back-button\"\r\n            onClick={() => switchMapToState('India')}\r\n          >\r\n            Back\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <ChoroplethMap\r\n        statistic={statistic}\r\n        mapMeta={currentMap}\r\n        mapData={currentMapData}\r\n        setHoveredRegion={setHoveredRegion}\r\n        changeMap={switchMapToState}\r\n        selectedRegion={selectedRegion}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction TimeSeries(props) {\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const [datapoint, setDatapoint] = useState({});\r\n  const [index, setIndex] = useState(10);\r\n  const [mode, setMode] = useState(props.mode);\r\n  const [logMode, setLogMode] = useState(props.logMode);\r\n  const [update, setUpdate] = useState(-1);\r\n\r\n  const graphElement1 = useRef(null);\r\n  const graphElement2 = useRef(null);\r\n  const graphElement3 = useRef(null);\r\n  const graphElement4 = useRef(null);\r\n  const graphElement5 = useRef(null);\r\n  const graphElement6 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      setTimeseries(props.timeseries);\r\n    }\r\n  }, [props.timeseries]);\r\n\r\n  useEffect(() => {\r\n    setMode(props.mode);\r\n    setUpdate((u) => u + 1);\r\n  }, [props.mode]);\r\n\r\n  useEffect(() => {\r\n    setLogMode(props.logMode);\r\n    setUpdate((u) => u + 1);\r\n  }, [props.logMode]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      const data = timeseries;\r\n      setDatapoint(timeseries[timeseries.length - 1]);\r\n      setIndex(timeseries.length - 1);\r\n\r\n      const svg1 = d3.select(graphElement1.current);\r\n      const svg2 = d3.select(graphElement2.current);\r\n      const svg3 = d3.select(graphElement3.current);\r\n      const svg4 = d3.select(graphElement4.current);\r\n      const svg5 = d3.select(graphElement5.current);\r\n      const svg6 = d3.select(graphElement6.current);\r\n\r\n      // Margins\r\n      const margin = {top: 0, right: 20, bottom: 50, left: 20};\r\n      const width = 650 - margin.left - margin.right;\r\n      const height = 200 - margin.top - margin.bottom;\r\n\r\n      const dateMin = new Date(data[0]['date'] + '2020');\r\n      dateMin.setDate(dateMin.getDate() - 1);\r\n      const dateMax = new Date(data[timeseries.length - 1]['date'] + '2020');\r\n      dateMax.setDate(dateMax.getDate() + 1);\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain([dateMin, dateMax])\r\n        .range([margin.left, width]);\r\n\r\n      const indexScale = d3\r\n        .scaleLinear()\r\n        .domain([0, timeseries.length])\r\n        .range([margin.left, width]);\r\n\r\n      // Arrays of objects\r\n      const svgArray = [svg1, svg2, svg3, svg4, svg5, svg6];\r\n      const dataTypes = [\r\n        'totalconfirmed',\r\n        'totalrecovered',\r\n        'totaldeceased',\r\n        'dailyconfirmed',\r\n        'dailyrecovered',\r\n        'dailydeceased',\r\n      ];\r\n      const colors = [\r\n        '#ff073a',\r\n        '#28a745',\r\n        '#6c757d',\r\n        '#ff073a',\r\n        '#28a745',\r\n        '#6c757d',\r\n      ];\r\n      const logCharts = new Set([\r\n        'totalconfirmed',\r\n        'totalrecovered',\r\n        'totaldeceased',\r\n      ]);\r\n\r\n      const dTypeMaxMap = dataTypes.reduce((a, c) => {\r\n        a[c] = d3.max(data, (d) => +d[c]);\r\n        return a;\r\n      }, {});\r\n\r\n      const yScales = Object.entries(dTypeMaxMap).map(([type, maxY]) => {\r\n        // apply mode, logMode, etc -- determine scales once and for all\r\n        const applyLogMode = (maxY) =>\r\n          logMode && logCharts.has(type)\r\n            ? d3.scaleLog().domain([1, maxY]).nice()\r\n            : d3.scaleLinear().domain([-maxY / 10, maxY]);\r\n\r\n        return (mode\r\n          ? applyLogMode(\r\n              type.match('^total')\r\n                ? dTypeMaxMap['totalconfirmed']\r\n                : dTypeMaxMap['dailyconfirmed']\r\n            )\r\n          : applyLogMode(maxY)\r\n        ).range([height, margin.top]);\r\n      });\r\n\r\n      const y = (dataTypeIdx, day) => {\r\n        // Scaling mode filters\r\n        const y = yScales[dataTypeIdx];\r\n        const dType = dataTypes[dataTypeIdx];\r\n        return y(logMode ? Math.max(1, day[dType]) : day[dType]); // max(1,y) for logmode\r\n      };\r\n\r\n      /* Focus dots */\r\n      const focus = svgArray.map((d, i) => {\r\n        return d\r\n          .append('g')\r\n          .append('circle')\r\n          .attr('fill', colors[i])\r\n          .attr('stroke', colors[i])\r\n          .attr('r', 5)\r\n          .attr('cx', x(new Date(data[timeseries.length - 1]['date'] + '2020')))\r\n          .attr('cy', y(i, data[timeseries.length - 1]));\r\n      });\r\n\r\n      function mouseout() {\r\n        setDatapoint(data[timeseries.length - 1]);\r\n        setIndex(timeseries.length - 1);\r\n        focus.forEach((d, i) => {\r\n          d.attr(\r\n            'cx',\r\n            x(new Date(data[timeseries.length - 1]['date'] + '2020'))\r\n          ).attr('cy', y(i, data[timeseries.length - 1]));\r\n        });\r\n      }\r\n\r\n      function mousemove() {\r\n        const xm = d3.mouse(this)[0];\r\n        const i = Math.round(indexScale.invert(xm));\r\n        if (0 <= i && i < timeseries.length) {\r\n          const d = data[i];\r\n          setDatapoint(d);\r\n          setIndex(i);\r\n          focus.forEach((f, j) => {\r\n            f.attr('cx', x(new Date(d['date'] + '2020'))).attr('cy', y(j, d));\r\n          });\r\n        }\r\n      }\r\n\r\n      const tickCount = (scaleIdx) => {\r\n        return logMode\r\n          ? Math.ceil(Math.log10(yScales[scaleIdx].domain()[1]))\r\n          : 5;\r\n      };\r\n\r\n      /* Begin drawing charts */\r\n      svgArray.forEach((s, i) => {\r\n        /* X axis */\r\n        s.append('g')\r\n          .attr('transform', 'translate(0,' + height + ')')\r\n          .attr('class', 'axis')\r\n          .call(d3.axisBottom(x));\r\n\r\n        /* Y axis */\r\n        s.append('g')\r\n          .attr('transform', `translate(${width}, ${0})`)\r\n          .attr('class', 'axis')\r\n          .call(\r\n            d3\r\n              .axisRight(yScales[i])\r\n              .ticks(tickCount(i))\r\n              .tickPadding(5)\r\n              .tickFormat(d3.format('.2s'))\r\n          );\r\n\r\n        /* Focus dots */\r\n        s.on('mousemove', mousemove)\r\n          .on('touchmove', mousemove)\r\n          .on('mouseout', mouseout)\r\n          .on('touchend', mouseout);\r\n\r\n        /* Path dots */\r\n        const dots = s\r\n          .selectAll('.dot')\r\n          .data(data)\r\n          .enter()\r\n          .append('circle')\r\n          .attr('fill', colors[i])\r\n          .attr('stroke', colors[i])\r\n          .attr('cursor', 'pointer')\r\n          .attr('cx', (d) => {\r\n            return x(new Date(d['date'] + '2020'));\r\n          })\r\n          .attr('cy', (d) => y(i, d));\r\n\r\n        /* Paths */\r\n        if (i < Math.floor(svgArray.length / 2)) {\r\n          s.append('path')\r\n            .datum(data)\r\n            .attr('fill', 'none')\r\n            .attr('stroke', colors[i] + '99')\r\n            .attr('stroke-width', 5)\r\n            .attr('cursor', 'pointer')\r\n            .attr(\r\n              'd',\r\n              d3\r\n                .line()\r\n                .x((d) => {\r\n                  return x(new Date(d['date'] + '2020'));\r\n                })\r\n                .y((d) => y(i, d))\r\n                .curve(d3.curveCardinal)\r\n            );\r\n          dots.attr('r', 3);\r\n        } else {\r\n          s.selectAll('stem-line')\r\n            .data(data)\r\n            .enter()\r\n            .append('line')\r\n            .attr('x1', (d) => {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .attr('y1', height)\r\n            .attr('x2', (d) => {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .attr('y2', (d) => y(i, d))\r\n            .style('stroke', colors[i] + '99')\r\n            .style('stroke-width', 4);\r\n          dots.attr('r', 2);\r\n        }\r\n      });\r\n    },\r\n    [logMode, mode]\r\n  );\r\n\r\n  const refreshGraphs = useCallback(() => {\r\n    const graphs = [\r\n      graphElement1,\r\n      graphElement2,\r\n      graphElement3,\r\n      graphElement4,\r\n      graphElement5,\r\n      graphElement6,\r\n    ];\r\n    for (let i = 0; i < graphs.length; i++) {\r\n      d3.select(graphs[i].current).selectAll('*').remove();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (update > 0) {\r\n      refreshGraphs();\r\n    }\r\n  }, [update, refreshGraphs]);\r\n\r\n  useEffect(() => {\r\n    if (timeseries.length > 1) {\r\n      graphData(timeseries);\r\n    }\r\n  }, [timeseries, graphData]);\r\n\r\n  return (\r\n    <div\r\n      className=\"TimeSeries-Parent fadeInUp\"\r\n      style={{animationDelay: '1.7s'}}\r\n    >\r\n      <div\r\n        className=\"timeseries\"\r\n        style={{display: props.type === 1 ? 'flex' : 'none'}}\r\n      >\r\n        <div className=\"svg-parent\">\r\n          <div className=\"stats\">\r\n            <h5>Confirmed</h5>\r\n            <h5>\r\n              {timeseries.length - 1 === index\r\n                ? `${datapoint['date']} Yesterday`\r\n                : datapoint['date']}\r\n            </h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['totalconfirmed']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['totalconfirmed'] -\r\n                      timeseries[index - 1]['totalconfirmed'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['totalconfirmed'] -\r\n                        timeseries[index - 1]['totalconfirmed'])\r\n                    : timeseries[index]['totalconfirmed'] -\r\n                      timeseries[index - 1]['totalconfirmed']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement1}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-green\">\r\n          <div className=\"stats is-green\">\r\n            <h5>Recovered</h5>\r\n            <h5>\r\n              {timeseries.length - 1 === index\r\n                ? `${datapoint['date']} Yesterday`\r\n                : datapoint['date']}\r\n            </h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['totalrecovered']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['totalrecovered'] -\r\n                      timeseries[index - 1]['totalrecovered'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['totalrecovered'] -\r\n                        timeseries[index - 1]['totalrecovered'])\r\n                    : timeseries[index]['totalrecovered'] -\r\n                      timeseries[index - 1]['totalrecovered']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement2}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-gray\">\r\n          <div className=\"stats is-gray\">\r\n            <h5>Deceased</h5>\r\n            <h5>\r\n              {timeseries.length - 1 === index\r\n                ? `${datapoint['date']} Yesterday`\r\n                : datapoint['date']}\r\n            </h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['totaldeceased']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['totaldeceased'] -\r\n                      timeseries[index - 1]['totaldeceased'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['totaldeceased'] -\r\n                        timeseries[index - 1]['totaldeceased'])\r\n                    : timeseries[index]['totaldeceased'] -\r\n                      timeseries[index - 1]['totaldeceased']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement3}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"timeseries\"\r\n        style={{display: props.type === 2 ? 'flex' : 'none'}}\r\n      >\r\n        <div className=\"svg-parent\">\r\n          <div className=\"stats\">\r\n            <h5>Confirmed</h5>\r\n            <h5>\r\n              {timeseries.length - 1 === index\r\n                ? `${datapoint['date']} Yesterday`\r\n                : datapoint['date']}\r\n            </h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['dailyconfirmed']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['dailyconfirmed'] -\r\n                      timeseries[index - 1]['dailyconfirmed'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['dailyconfirmed'] -\r\n                        timeseries[index - 1]['dailyconfirmed'])\r\n                    : timeseries[index]['dailyconfirmed'] -\r\n                      timeseries[index - 1]['dailyconfirmed']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement4}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-green\">\r\n          <div className=\"stats is-green\">\r\n            <h5>Recovered</h5>\r\n            <h5>\r\n              {timeseries.length - 1 === index\r\n                ? `${datapoint['date']} Yesterday`\r\n                : datapoint['date']}\r\n            </h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['dailyrecovered']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['dailyrecovered'] -\r\n                      timeseries[index - 1]['dailyrecovered'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['dailyrecovered'] -\r\n                        timeseries[index - 1]['dailyrecovered'])\r\n                    : timeseries[index]['dailyrecovered'] -\r\n                      timeseries[index - 1]['dailyrecovered']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement5}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-gray\">\r\n          <div className=\"stats is-gray\">\r\n            <h5>Deceased</h5>\r\n            <h5>\r\n              {timeseries.length - 1 === index\r\n                ? `${datapoint['date']} Yesterday`\r\n                : datapoint['date']}\r\n            </h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['dailydeceased']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['dailydeceased'] -\r\n                      timeseries[index - 1]['dailydeceased'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['dailydeceased'] -\r\n                        timeseries[index - 1]['dailydeceased'])\r\n                    : timeseries[index]['dailydeceased'] -\r\n                      timeseries[index - 1]['dailydeceased']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement6}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeSeries;\r\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction Minigraph(props) {\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const graphElement1 = useRef(null);\r\n  const graphElement2 = useRef(null);\r\n  const graphElement3 = useRef(null);\r\n  const graphElement4 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 20));\r\n    }\r\n  }, [props.timeseries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length <= 1) return 0;\r\n      const data = timeseries;\r\n      const svg1 = d3.select(graphElement1.current);\r\n      const margin = {top: 30, right: 10, bottom: 30, left: 0};\r\n      const width = 100 - margin.left - margin.right;\r\n      const height = 100 - margin.top - margin.bottom;\r\n\r\n      const svg2 = d3.select(graphElement2.current);\r\n      const svg3 = d3.select(graphElement3.current);\r\n      const svg4 = d3.select(graphElement4.current);\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain(\r\n          d3.extent(data, function (d) {\r\n            return new Date(d['date'] + '2020');\r\n          })\r\n        )\r\n        .range([0, width]);\r\n\r\n      const y1 = d3\r\n        .scaleLinear()\r\n        .domain([\r\n          0,\r\n          d3.max(data, function (d) {\r\n            return +d['dailyconfirmed'];\r\n          }),\r\n        ])\r\n        .range([height, 0]);\r\n\r\n      const path1 = svg1\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#ff073a99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              return y1(d['dailyconfirmed']);\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength1 = path1.node().getTotalLength();\r\n      path1\r\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\r\n        .attr('stroke-dashoffset', totalLength1)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg1\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#ff073a')\r\n        .attr('stroke', '#ff073a')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          return y1(d['dailyconfirmed']);\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n\r\n      const path2 = svg2\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('cursor', 'pointer')\r\n        .attr('stroke', '#007bff99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(\r\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\r\n                );\r\n              } else {\r\n                return y1(\r\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\r\n                );\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength2 = path2.node().getTotalLength();\r\n      path2\r\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\r\n        .attr('stroke-dashoffset', totalLength2)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg2\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#007bff')\r\n        .attr('stroke', '#007bff')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          /* const today =\r\n          data[data.length - 1]['dailyconfirmed'] -\r\n          data[data.length - 1]['dailyrecovered'] -\r\n          data[data.length - 1]['dailydeceased'];\r\n        const yesterday =\r\n          data[data.length - 2]['dailyconfirmed'] -\r\n          data[data.length - 2]['dailyrecovered'] -\r\n          data[data.length - 2]['dailydeceased'];*/\r\n          return y1(\r\n            d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\r\n          );\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n\r\n      const path3 = svg3\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#28a74599')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(d['dailyrecovered']);\r\n              } else {\r\n                return y1(d['dailyrecovered']);\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength3 = path1.node().getTotalLength();\r\n      path3\r\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\r\n        .attr('stroke-dashoffset', totalLength3)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg3\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#28a745')\r\n        .attr('stroke', '#28a745')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          return y1(d['dailyrecovered']);\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n\r\n      const path4 = svg4\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('cursor', 'pointer')\r\n        .attr('stroke', '#6c757d99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(d['dailydeceased']);\r\n              } else {\r\n                return y1(d['dailydeceased']);\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength4 = path4.node().getTotalLength();\r\n      path4\r\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\r\n        .attr('stroke-dashoffset', totalLength4)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg4\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#6c757d')\r\n        .attr('stroke', '#6c757d')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          return y1(d['dailydeceased']);\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n    },\r\n    [props.animate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    graphData(timeseries);\r\n  }, [timeseries, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '0.6s'}}>\r\n        <svg\r\n          ref={graphElement1}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{animationDelay: '0.7s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement2}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-green fadeInUp\"\r\n        style={{animationDelay: '0.8s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement3}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-gray fadeInUp\"\r\n        style={{animationDelay: '0.9s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement4}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Minigraph;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {formatDistance} from 'date-fns';\r\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\r\nimport Table from './table';\r\nimport Level from './level';\r\nimport MapExplorer from './mapexplorer';\r\nimport TimeSeries from './timeseries';\r\nimport Minigraph from './minigraph';\r\n\r\nfunction Home(props) {\r\n  const [states, setStates] = useState([]);\r\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\r\n  const [fetched, setFetched] = useState(false);\r\n  const [graphOption, setGraphOption] = useState(1);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const [deltas, setDeltas] = useState([]);\r\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\r\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\r\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [response, stateDistrictWiseResponse] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setTimeseries(response.data.cases_time_series);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setDeltas(response.data.key_values[0]);\r\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onHighlightState = (state, index) => {\r\n    if (!state && !index) setRegionHighlighted(null);\r\n    else setRegionHighlighted({state, index});\r\n  };\r\n  const onHighlightDistrict = (district, state, index) => {\r\n    if (!state && !index && !district) setRegionHighlighted(null);\r\n    else setRegionHighlighted({district, state, index});\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"home-left\">\r\n        <div className=\"header fadeInUp\" style={{animationDelay: '0.5s'}}>\r\n          <div className=\"header-mid\">\r\n            <div className=\"titles\">\r\n              <h1>India COVID-19 Tracker</h1>\r\n              <h6 style={{fontWeight: 600}}>A Crowdsourced Initiative</h6>\r\n            </div>\r\n            <div className=\"last-update\">\r\n              <h6>Last Updated</h6>\r\n              <h6 style={{color: '#28a745', fontWeight: 600}}>\r\n                {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                  ? ''\r\n                  : formatDistance(\r\n                      new Date(formatDate(lastUpdated)),\r\n                      new Date()\r\n                    ) + ' Ago'}\r\n              </h6>\r\n              <h6 style={{color: '#28a745', fontWeight: 600}}>\r\n                {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                  ? ''\r\n                  : formatDateAbsolute(lastUpdated)}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Level data={states} deltas={deltas} />\r\n        <Minigraph timeseries={timeseries} animate={true} />\r\n\r\n        <Table\r\n          states={states}\r\n          summary={false}\r\n          stateDistrictWiseData={stateDistrictWiseData}\r\n          onHighlightState={onHighlightState}\r\n          onHighlightDistrict={onHighlightDistrict}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"home-right\">\r\n        {fetched && (\r\n          <React.Fragment>\r\n            <MapExplorer\r\n              states={states}\r\n              stateDistrictWiseData={stateDistrictWiseData}\r\n              regionHighlighted={regionHighlighted}\r\n            />\r\n\r\n            <div\r\n              className=\"timeseries-header fadeInUp\"\r\n              style={{animationDelay: '1.5s'}}\r\n            >\r\n              <h1>Spread Trends</h1>\r\n              <div className=\"tabs\">\r\n                <div\r\n                  className={`tab ${graphOption === 1 ? 'focused' : ''}`}\r\n                  onClick={() => {\r\n                    setGraphOption(1);\r\n                  }}\r\n                >\r\n                  <h4>Cumulative</h4>\r\n                </div>\r\n                <div\r\n                  className={`tab ${graphOption === 2 ? 'focused' : ''}`}\r\n                  onClick={() => {\r\n                    setGraphOption(2);\r\n                  }}\r\n                >\r\n                  <h4>Daily</h4>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"scale-modes\">\r\n                <label>Scale Modes</label>\r\n                <div className=\"timeseries-mode\">\r\n                  <label htmlFor=\"timeseries-mode\">Uniform</label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={timeseriesMode}\r\n                    className=\"switch\"\r\n                    aria-label=\"Checked by default to scale uniformly.\"\r\n                    onChange={(event) => {\r\n                      setTimeseriesMode(!timeseriesMode);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={`timeseries-logmode ${\r\n                    graphOption !== 1 ? 'disabled' : ''\r\n                  }`}\r\n                >\r\n                  <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={graphOption === 1 && timeseriesLogMode}\r\n                    className=\"switch\"\r\n                    disabled={graphOption !== 1}\r\n                    onChange={(event) => {\r\n                      setTimeseriesLogMode(!timeseriesLogMode);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <TimeSeries\r\n              timeseries={timeseries}\r\n              type={graphOption}\r\n              mode={timeseriesMode}\r\n              logMode={timeseriesLogMode}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Component } from \"react\";\r\nimport L from \"leaflet\";\r\nimport * as ELG from \"esri-leaflet-geocoder\";\r\nimport { withLeaflet } from \"react-leaflet\";\r\nlet search=null;\r\nclass Search extends Component {\r\n  \r\n  componentDidMount() {\r\n    const map = this.props.leaflet.map;\r\n    const searchControl = new ELG.Geosearch().addTo(map);\r\n    const results = new L.LayerGroup().addTo(map);\r\n    searchControl.on(\"results\", function(data) {\r\n      results.clearLayers();\r\n      //   for (let i = data.results.length - 1; i >= 0; i--) {}\r\n      search(data.results[0].latlng)\r\n        results.addLayer(L.marker(data.results[0].latlng));\r\n      \r\n    });\r\n  }\r\n\r\n  render() {\r\n   search= this.props.search;\r\n    return null;\r\n  }\r\n}\r\n//export default Search;\r\nexport default withLeaflet(Search);\r\n\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Map, Marker, Popup, TileLayer,Circle,CircleMarker} from \"react-leaflet\";\r\nimport L from 'leaflet';\r\nimport * as ELG from 'esri-leaflet-geocoder';\r\nimport Search from './search'\r\nimport './corona.svg'\r\nimport 'leaflet/dist/leaflet.css'\r\n//import * as parkData from \"./data/skateboard-parks.json\";\r\nconst virus = new L.Icon({\r\niconUrl:require('./corona.svg'),\r\niconRetinaUrl: require('./icon.svg'),\r\niconAnchor: [5, 55],\r\n\r\niconSize:[40,40]\r\n\r\n});\r\nconst rectangle = [\r\n    [51.49, -0.08],\r\n    [51.5, -0.06],\r\n  ]\r\n\r\n// const mapData ={\r\n//      features:[ \r\n//          {\r\n//              id:'1',\r\n//              coordinates:[28.7041,77.1025]\r\n//          },\r\n//          {\r\n//             id:'2',\r\n//             coordinates:[29.7041,73.1025]\r\n//         },\r\n//      ]\r\n\r\n// }\r\n\r\nexport default  function MapChart(props) {\r\nconst [activeModal,setActiveModal]= useState(null);\r\n\r\nuseEffect(()=>{console.log('patient',props.name)})\r\nconst handleZoomstart = (event) => {\r\n console.log(event.target._zoom)\r\n};\r\n\r\n  return (\r\n    <Map  className=\"leaflet-container \" \r\n       center={props.pLocation||props.currentLocation||props.pinLocation||[25.7041,77.1025]} zoom={props.radius?(props.radius>6?10:11):7} >\r\n      <TileLayer\r\n        detectRetina={true}\r\n        maxNativeZoom=\"17\"\r\n        maxZoom={17}\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\"></a> '\r\n      />\r\n      {props.pLocation?( <Circle center={props.pLocation} fillColor=\"red\" radius={props.cases>'50'?4000:3000}>\r\n     <Popup autoPan><h5>{props.cases} cases present in this area.</h5></Popup>\r\n          </Circle>):null}\r\n       \r\n        \r\n          \r\n      \r\n      {(props.currentLocation||props.pinLocation)&&(\r\n          <Marker  position={props.currentLocation||props.pinLocation}>\r\n              <Popup>your current location</Popup>\r\n          </Marker>\r\n      )}\r\n     <Search  search={props.searchMap}/>\r\n\r\n    </Map> \r\n  );\r\n}  ","import React from 'react'\r\n\r\nconst Display=(props)=>{\r\n\r\n    return (\r\n        <div className=\"tracker_display\">\r\n            <h4 className=\"line anim-typewriter\">{props.children}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display","import React,{useEffect,useState}  from 'react';\r\nimport MapChart from './mapChart'\r\nimport axios from 'axios'\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport RoomTwoToneIcon from '@material-ui/icons/RoomTwoTone';\r\nimport { TextField } from '@material-ui/core';\r\nimport Display from './display.js'\r\nimport { AlignCenter } from 'react-feather';\r\nconst URL ='https://tracker-covid-19.herokuapp.com'\r\nlet pinLocation=null;\r\nlet reset=false;\r\n\r\n\r\nconst Tracker = (props)=>{\r\nconst [input,setInputData] = useState('');\r\nconst [currentLocation,setCurrentLocation]=useState(null);\r\nconst [error,setError] =useState(false);\r\nconst [invalidPin,setInvalidPin]=useState(false);\r\nconst [receiveData,setReceiveData]=useState(null);\r\nconst header={\r\n  'Access-Control-Allow-Origin': '*'\r\n}\r\n \r\n\r\nuseEffect(()=>{\r\n  if(currentLocation){\r\n    \r\n  axios.get(URL+'/tracker',{\r\n    params:{\r\n      latitude:currentLocation[0],\r\n      longitude:currentLocation[1]\r\n    }\r\n   \r\n  }).then(response=>{\r\n    reset=true;\r\n    console.log(response.data);\r\n        setReceiveData(response.data);\r\n  })\r\n  .catch(err=>{\r\n    console.log(err);\r\n    setError(true);\r\n  })\r\n}\r\n},[currentLocation])\r\n\r\n\r\nconst inputHandler=(event)=>{\r\n    const val  = event.target.value;\r\n    console.log(val);   \r\n    setInputData(val)\r\n}\r\nconst getLocationHandler = (event)=>{\r\n  reset=false;\r\n    event.preventDefault()\r\n    navigator.geolocation.getCurrentPosition(position=>{\r\n    setCurrentLocation([position.coords.latitude,position.coords.longitude])\r\n    setError(false);\r\n    },error=>{\r\n        console.log(error);\r\n        setError(true);\r\n\r\n    })\r\n}\r\n\r\nconst clickListener=()=>{\r\n  console.log('clicked');\r\n  reset=false;\r\n  axios.get(URL+'/tracker',{\r\n    params:{pinCode:input}\r\n  }).then(response=>{\r\n    console.log(response.data);\r\n    if(!response.data.PIN_validity){\r\n      setInvalidPin(true);\r\n    }\r\n    else{\r\n      pinLocation=[response.data.lat,response.data.lng]\r\n      reset=true;\r\n      setReceiveData(response.data);\r\n      setCurrentLocation(null);\r\n      setInvalidPin(false);\r\n      \r\n    }\r\n  }).catch(err=>{\r\n    console.log(err);\r\n  })\r\n\r\n}\r\n\r\nconst searchHandler = (data)=>{\r\n  reset=false;\r\nconsole.log('successful',data.lat,data.lng );\r\nsetCurrentLocation([data.lat,data.lng]);\r\n\r\n}\r\n  return (\r\n  <div className=\"tracker\">\r\n    <div style={{color:'blue',textAlign:'center'}}>\r\n  <RoomTwoToneIcon  style={{fontSize:'3rem'}} />\r\n  <br/>\r\n  <h1 >NearBy Cases</h1>\r\n   </div>\r\n  {error?<p style={{color:\"red\",textAlign:'center'}}>Error fetching location</p>:null}\r\n  {reset&&<Display>{receiveData.cases} at distance of {receiveData.minDist} KM :{receiveData.district}</Display>}\r\n  <div  style={{color:\"red\",textAlign:'center'}}>{isNaN(input)||invalidPin?'please enter valid pincode':null}</div>\r\n  \r\n    <div className=\"tracker_bar\">\r\n    <button className=\"button\" \r\n     onClick={(event)=>getLocationHandler(event)}>\r\n     GPS Location</button>\r\n     <div >\r\n     <label> <h4 className=\"h4\">Enter Area pincode:</h4></label>\r\n     <TextField className=\"input input_tracker\" \r\n           type=\"text\" placeholder=\"Enter your pincode\"\r\n           onChange={(event)=>inputHandler(event)}\r\n           value={input}\r\n            InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n              <IconButton onClick={clickListener}>\r\n              <SearchIcon />\r\n              </IconButton>\r\n              </InputAdornment> )}}\r\n      />\r\n      </div>\r\n          \r\n    </div>\r\n    \r\n    <div>\r\n    <MapChart \r\n      searchMap={(data)=>searchHandler(data)} \r\n      currentLocation={currentLocation}  \r\n      className=\"leaflet-container\"\r\n      pLocation={receiveData?[receiveData.lat,receiveData.lng]:null}\r\n      radius={receiveData?+receiveData.minDist:null}\r\n      cases={receiveData?receiveData.cases:null}\r\n      pinLocation={pinLocation}\r\n      />\r\n      </div>\r\n     \r\n    </div>\r\n    \r\n    )\r\n}\r\nexport default Tracker;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n  // HTML Properties for each of the links in UI\r\n  const navLinkProps = (path, animationDelay) => ({\r\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\r\n    style: {\r\n      animationDelay: `${animationDelay}s`,\r\n    },\r\n  });\r\n\r\n  if (window.location.pathname !== '/summary') {\r\n    return (\r\n      <div\r\n        className=\"Navbar\"\r\n        style={{\r\n          animationDelay: '0.5s',\r\n          height: window.location.pathname === '/clusters' ? '2.5rem' : '',\r\n          transition: 'all 0.3s ease-in-out',\r\n        }}\r\n      >\r\n        <img\r\n          className=\"fadeInUp logo\"\r\n          alt=\"India COVID-19 Tracker\"\r\n          src=\"/icon.png\"\r\n          style={{\r\n            animationDelay: '0.0s',\r\n            width: window.location.pathname === '/clusters' ? '1.5rem' : '',\r\n            height: window.location.pathname === '/clusters' ? '1.5rem' : '',\r\n            transition: 'all 0.3s ease-in-out',\r\n          }}\r\n        />\r\n\r\n        <div className=\"navbar-left\">\r\n          {props.pages.map((page, i) => {\r\n            return (\r\n              <Link to={page.pageLink} key={i}>\r\n                <span\r\n                  {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\r\n                >\r\n                  {page.displayName}\r\n                </span>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"navbar-right\"></div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nfunction Links(props) {\r\n  return (\r\n    <div className=\"Links\">\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\r\n        <h3>HELPLINE NUMBERS [by State]</h3>\r\n        <a href=\"https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\">\r\n          https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\r\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\r\n        <a href=\"https://www.mohfw.gov.in/\">https://www.mohfw.gov.in/</a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\r\n        <h3>WHO : COVID-19 Home Page</h3>\r\n        <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\">\r\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\r\n        <h3>CDC</h3>\r\n        <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\">\r\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\r\n        <h3>COVID-19 Global Tracker</h3>\r\n        <a href=\"https://coronavirus.thebaselab.com/\">\r\n          https://coronavirus.thebaselab.com/\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react';\r\n\r\nfunction Cluster(props) {\r\n  return (\r\n    <div className=\"iframe-container\" referrerPolicy=\"no-referrer\" width=\"100%\">\r\n      <iframe title=\"clusters\" src=\"https://cluster.covid19india.org\"></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cluster;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FAQ(props) {\r\n  const [faq, setFaq] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFAQs();\r\n  }, []);\r\n\r\n  const getFAQs = () => {\r\n    axios\r\n      .get('https://api.covid19india.org/faq.json')\r\n      .then((response) => {\r\n        setFaq(response.data.faq);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"FAQ\">\r\n      {faq.map((faq, index) => {\r\n        return (\r\n          <div\r\n            key={index}\r\n            className=\"faq fadeInUp\"\r\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\r\n          >\r\n            <h2 className=\"question\">{faq.question}</h2>\r\n            <h2\r\n              className=\"answer\"\r\n              dangerouslySetInnerHTML={{__html: faq.answer}}\r\n            ></h2>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FAQ;\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Banner(props) {\r\n  const [snippets, setSnippets] = useState([]);\r\n  const [snippet, setSnippet] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/website_data.json')\r\n      .then((response) => {\r\n        setSnippets(response.data.factoids || []);\r\n        setSnippet(response.data.factoids[0] || '');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const snippetChooser = useCallback(\r\n    (min, max) => {\r\n      const index = Math.random() * (max - min) + min;\r\n      setSnippet(snippets[Math.floor(index)]);\r\n    },\r\n    [snippets]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      snippetChooser(0, snippets.length - 1);\r\n    }, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [snippetChooser, snippets]);\r\n\r\n  return (\r\n    <div\r\n      onClick={() => snippetChooser(0, snippets.length - 1)}\r\n      className=\"Banner fadeInUp\"\r\n      style={{animationDelay: '0.2s'}}\r\n    >\r\n      <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\n\r\nimport './App.scss';\r\n\r\nimport Home from './components/home';\r\nimport Tracker from './components/tracker'\r\nimport Navbar from './components/navbar';\r\nimport Links from './components/links';\r\nimport Cluster from './components/cluster';\r\nimport FAQ from './components/faq';\r\nimport Banner from './components/banner';\r\n/* import PatientDB from './components/patientdb';*/\r\n\r\nconst history = require('history').createBrowserHistory;\r\n\r\nfunction App() {\r\n  const pages = [\r\n    {\r\n      pageLink: '/',\r\n      view: Home,\r\n      displayName: 'Home',\r\n      animationDelayForNavbar: 0.2,\r\n    },\r\n    /* {\r\n      pageLink: '/patientsDB',\r\n      view: PatientDB,\r\n      displayName: 'Patients DB',\r\n      animationDelayForNavbar: 0.3,\r\n    },*/\r\n    \r\n    {\r\n      pageLink: '/clusters',\r\n      view: Cluster,\r\n      displayName: 'Clusters',\r\n      animationDelayForNavbar: 0.4,\r\n    },\r\n    {\r\n      pageLink: '/tracker',\r\n      view: Tracker,\r\n      displayName: 'trackers',\r\n      animationDelayForNavbar: 0.4,\r\n    },\r\n    {\r\n      pageLink: '/links',\r\n      view: Links,\r\n      displayName: 'Helpful Links',\r\n      animationDelayForNavbar: 0.5,\r\n    },\r\n    {\r\n      pageLink: '/faq',\r\n      view: FAQ,\r\n      displayName: 'FAQ',\r\n      animationDelayForNavbar: 0.6,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <Route\r\n          render={({location}) => (\r\n            <div className=\"Almighty-Router\">\r\n              <Navbar pages={pages} />\r\n              <Banner />\r\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\r\n              <Switch location={location}>\r\n                {pages.map((page, i) => {\r\n                  return (\r\n                    <Route\r\n                      exact\r\n                      path={page.pageLink}\r\n                      component={page.view}\r\n                      key={i}\r\n                    />\r\n                  );\r\n                })}\r\n              </Switch>\r\n            </div>\r\n          )}\r\n        />\r\n      </Router>\r\n\r\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\r\n        {/* <img\r\n          src=\"/icon.png\"\r\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\r\n        />*/}\r\n\r\n        <h5>We stand with everyone fighting on the frontlines</h5>\r\n        <div className=\"link\">\r\n          <a href=\"https://github.com/covid19india\">covid19india</a>\r\n        </div>\r\n        <a\r\n          href=\"https://github.com/covid19india/covid19india-react\"\r\n          className=\"button github\"\r\n        >\r\n          <Icon.GitHub />\r\n          <span>Open Sourced on GitHub</span>\r\n        </a>\r\n        <a\r\n          className=\"button excel\"\r\n          href=\"https://bit.ly/patientdb\"\r\n          target=\"_noblank\"\r\n        >\r\n          <Icon.Database />\r\n          <span>Crowdsourced Patient Database&nbsp;</span>\r\n        </a>\r\n        <a\r\n          href=\"https://twitter.com/covid19indiaorg\"\r\n          target=\"_noblank\"\r\n          className=\"button twitter\"\r\n          style={{justifyContent: 'center'}}\r\n        >\r\n          <Icon.Twitter />\r\n          <span>View updates on Twitter</span>\r\n        </a>\r\n        <a\r\n          href=\"https://bit.ly/covid19crowd\"\r\n          className=\"button telegram\"\r\n          target=\"_noblank\"\r\n        >\r\n          <Icon.MessageCircle />\r\n          <span>Join Telegram to Collaborate!</span>\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}